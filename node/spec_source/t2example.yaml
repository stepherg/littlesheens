name: t2example
doc: none
parsepatterns: true
nodes:
  start:
    branching:
      branches:
        - target: generateNow

  generateNow:
    actions:
      - interpreter: ecmascript
        source: |-
          var bs = _.bindings;
          //_.log(bs['_id']);
          var now = parseInt(Date.now()/1000)
          _.out({"ts":now, "did":"generateNow"});
          return _.bindings;
      - type: RBUS
        method: GET
        paths: 
          - a
          - b
          - c
    branching:
      type: message
      branches:
        # set first interval timer
        - target: 
            dest: Idle
            # set timer event
            timer: 
              delay: 3000
              id: timer-firstInterval


  firstIntervalTask:
    actions:
      - interpreter: ecmascript
        source: |-
          var bs = _.bindings;
          //_.log(bs['_id']);
          var now = parseInt(Date.now()/1000)
          _.out({"ts":now, "did":"firstInterval"});
          return _.bindings;
      - type: RBUS
        method: GET
        paths: 
          - d
          - e
          - f
    branching:
      branches:
        - target: schedulePeriodic

  schedulePeriodic:
    branching:
      branches:
        # set first interval timer
        - target: 
            dest: Idle
            # set timer event
            timer: 
              delay: 5000
              #delay: 86400
              id: timer-periodic

  periodicTask:
    actions:
      - interpreter: ecmascript
        source: |-
          var bs = _.bindings;
          //_.log(bs['_id']);
          var now = parseInt(Date.now()/1000)
          _.out({"ts":now, "did":"periodic"});
          return _.bindings;
      - type: RBUS
        method: GET
        paths: 
          - h
          - i
          - j
    branching:
      branches:
        - target: schedulePeriodic

  Idle:
    branching:
      type: message
      branches:
        - pattern: |
            {"event":"timer-firstInterval"}
          target: firstIntervalTask
        - pattern: |
            {"event":"timer-periodic"}
          target: periodicTask

  stop:
    action:
      interpreter: ecmascript
      source: |-
        _.out({"action":"stopped"});
        return _.bindings;
