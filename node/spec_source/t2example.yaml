name: t2example
doc: none
parsepatterns: true
nodes:
  start:
    branching:
      branches:
        - target: generateNow

  generateNow:
    action:
      interpreter: ecmascript
      source: |-
        var bs = _.bindings;
        //_.log(bs['_id']);
        _.out({"did":"generateNow"});
        return _.bindings;
    branching:
      branches:
        # set first interval timer
        - target: 
            dest: firstInterval
            # set timer event
            timer: 
              delay: 3000
              id: timer-firstInterval

  firstInterval:
    action:
      interpreter: ecmascript
      source: |-
        var bs = _.bindings;
        //_.log(bs['_id']);
        _.out({"did":"firstInterval"});
        return _.bindings;
    branching:
      type: message
      branches:
        # when the event comes in, transition
        - pattern: |
            {"event":"timer-firstInterval"}
          target: schedulePeriodic

  schedulePeriodic:
    branching:
      branches:
        # set first interval timer
        - target: 
            dest: periodic
            # set timer event
            timer: 
              delay: 5000
              #delay: 86400
              id: timer-periodic

  periodic:
    action:
      interpreter: ecmascript
      source: |-
        var bs = _.bindings;
        //_.log(bs['_id']);
        _.out({"did":"periodic"});
        return _.bindings;
    branching:
      type: message
      branches:
        # when the event comes in, transition
        - pattern: |
            {"event":"timer-periodic"}
          target: schedulePeriodic
        #- pattern: |
        #    {"event":"stop"}
        #  target: stop

  stop:
    action:
      interpreter: ecmascript
      source: |-
        _.out({"action":"stopped"});
        return _.bindings;
